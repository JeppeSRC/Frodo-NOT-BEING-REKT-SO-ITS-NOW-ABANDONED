#pragma once
#include <util/string.h>

enum FD_TEXTURE_FORMAT {
	FD_TEXTURE_FORMAT_UNKNOWN,
	FD_TEXTURE_FORMAT_UINT_8_8_8_8,
	FD_TEXTURE_FORMAT_FLOAT_32_32_32_32,
	FD_TEXTURE_FORMAT_FLOAT_D32
};

enum FD_INDEXBUFFER_FORMAT {
	FD_INDEXBUFFER_FORMAT_UNKNOWN,
	FD_INDEXBUFFER_FORMAT_UINT32,
	FD_INDEXBUFFER_FORMAT_INT32,
	FD_INDEXBUFFER_FORMAT_UINT16,
	FD_INDEXBUFFER_FORMAT_INT16,
};

enum FD_SHADER_FIELD_TYPE {
	FD_SHADER_FIELD_TYPE_UNKOWN,
	FD_SHADER_FIELD_TYPE_MAT4,
	FD_SHADER_FIELD_TYPE_MAT3,
	FD_SHADER_FIELD_TYPE_VEC4,
	FD_SHADER_FIELD_TYPE_VEC3,
	FD_SHADER_FIELD_TYPE_VEC2,
	FD_SHADER_FIELD_TYPE_FLOAT
};

enum FD_SHADER_TYPE {
	FD_SHADER_TYPE_UNKOWN,
	FD_SHADER_TYPE_VERTEXSHADER,
	FD_SHADER_TYPE_PIXELSHADER,
	FD_SHADER_TYPE_GEOMETRYSHADER,
	FD_SHADER_TYPE_COMPUTESHADER
};

inline static String get_format_string(FD_TEXTURE_FORMAT format) {
	switch (format) {
		case FD_TEXTURE_FORMAT_UNKNOWN: return ("FD_TEXTURE2D_FORMAT_UBKNOWN");
		case FD_TEXTURE_FORMAT_UINT_8_8_8_8: return ("FD_TEXTURE2D_FORMAT_UINT_8_8_8_8");
		case FD_TEXTURE_FORMAT_FLOAT_32_32_32_32: return ("FD_TEXTURE2D_FORMAT_FLOAT_32_32_32_32");
	}
	return ("ERROR");
}

inline static String get_format_string(FD_INDEXBUFFER_FORMAT format) {
	switch (format) {
		case FD_INDEXBUFFER_FORMAT_UNKNOWN: return ("FD_INDEXBUFFER_FORMAT_UNKNOWN");
		case FD_INDEXBUFFER_FORMAT_UINT32: return ("FD_INDEXBUFFER_FORMAT_UINT32");
		case FD_INDEXBUFFER_FORMAT_INT32: return ("FD_INDEXBUFFER_FORMAT_INT32");
		case FD_INDEXBUFFER_FORMAT_UINT16: return ("FD_INDEXBUFFER_FORMAT_UINT16");
		case FD_INDEXBUFFER_FORMAT_INT16: return ("FD_INDEXBUFFER_FORMAT_INT16");
	}
	return ("ERROR");
}

inline static String get_shader_field_type_string(FD_SHADER_FIELD_TYPE type) {
	switch (type) {
		case FD_SHADER_FIELD_TYPE_UNKOWN: return ("FD_SHADER_FIELD_TYPE_UNKOWN");
		case FD_SHADER_FIELD_TYPE_MAT4: return ("FD_SHADER_FIELD_TYPE_MAT4");
		case FD_SHADER_FIELD_TYPE_MAT3: return ("FD_SHADER_FIELD_TYPE_MAT3");
		case FD_SHADER_FIELD_TYPE_VEC4: return ("FD_SHADER_FIELD_TYPE_VEC4");
		case FD_SHADER_FIELD_TYPE_VEC3: return ("FD_SHADER_FIELD_TYPE_VEC3");
		case FD_SHADER_FIELD_TYPE_VEC2: return ("FD_SHADER_FIELD_TYPE_VEC2");
		case FD_SHADER_FIELD_TYPE_FLOAT: return ("FD_SHADER_FIELD_TYPE_FLOAT");
	}
	return ("ERROR");
}

